DROP TRIGGER TOTALTST.TRG_INC_TGFTEL_M_TOTAL;

CREATE OR REPLACE TRIGGER TOTALTST.TRG_INC_TGFTEL_M_TOTAL
BEFORE INSERT OR UPDATE ON TOTALTST.TGFTEL
FOR EACH ROW
DECLARE
    VSEQUENCIA INT;
    PRAGMA AUTONOMOUS_TRANSACTION;
    PCODVEND INT; --VENDEDOR USADO PARA CARTEIRA DE VENDEDORES NO PARCEIRO.
    PCODVENDPRE INT; --VENDEDOR QUE SERA INSERIDO NA CARTEIRA.
    PCODGRUPO INT;
    PCODGRUPOVENDA INT := 10; --GRUPO DE VENDEDOR DE LOJA.
    PTEMCONTRATO INT;
    PKPAI INT;
    PKFILHO INT;
BEGIN
/*
DESCRIÇÃO: O campo COMENTARIOS foi modificado o tamanho, de 200 para 1000, para não perder os comentários nas atualizações do sistema 
será feito backup para o campo ad_coment_backup dota ves que for inserido.
AUTOR: Mauricio Rodrigues
ATUALIZAÇÃO: Mauricio Rodrigues
Data da criação: 27/10/2017
ATUALIZAÇÃO: Mauricio Rodrigues
Data: 18/04/2018
ALTERAÇÕES: Atualização nos comentários.
            Atualizado o campo AD_FALLOWUP
            Atualizado o insert e update das agendas, para o fluxo de prospecção do prospect.
*/

    --if 1.Bakup do comentário
    --2. atualiza data de contato do prospect    
    IF INSERTING OR UPDATING THEN
        :NEW.AD_COMENT_BACKUP := :NEW.COMENTARIOS;
    END IF;
    --STOP NA TRIGGER ABAIXO PARA NÃO ENTRAR EM LOOP
    EXECUTE IMMEDIATE 'ALTER TRIGGER TRG_INC_AD_AGENDAPAP_M_TOTAL DISABLE';
    
    --INSERE NA TABELA DETALHE DO PROSPECT.
    IF INSERTING THEN
        SELECT COUNT(1)
        INTO VSEQUENCIA
        FROM AD_AGENDAPAP
        WHERE CODPAP = :NEW.AD_CODPAP;
        --AQUI PRECISO VERIFICAR SE EXISTE UM PROSPECT (AD_CODPAP) POIS A TELA TAMBÉM É UTILIZADA POR OUTROS SETORES QUE USAM PARCEIROS (CODPARC)
        IF :NEW.AD_CODPAP is not null then
                    --VERIFICO O STATOS DO CAMPO AD_FALLOWUP E ATUALIZO O PROSPECT PARA O STATUS DE PROSPECÇÃO.
                    IF (:NEW.AD_FALLOWUP = 'F1') AND (:NEW.AD_REGMKTDIGITAL IS NULL) THEN
                        UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 2, AD_FLUXOLEAD = 2 WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
                    ELSIF (:NEW.AD_FALLOWUP = 'F2') AND (:NEW.AD_REGMKTDIGITAL IS NULL)  THEN
                        UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 4, AD_FLUXOLEAD = 2  WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
                    ELSIF (:NEW.AD_FALLOWUP = 'F3') AND (:NEW.AD_REGMKTDIGITAL IS NULL) THEN
                        UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 6, AD_FLUXOLEAD = 2  WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
                    ELSIF (:NEW.AD_FALLOWUP = 'SP') AND (:NEW.AD_REGMKTDIGITAL IS NULL)  THEN
                        UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 8, AD_FLUXOLEAD = 3 WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
                    END IF;
               --SE JÁ EXISTI REGISTRO NA AGENDA, É INSERIDO NA AGENDA DO PROSPECT.
               IF VSEQUENCIA <> 0 THEN
                Insert into AD_AGENDAPAP (CODNUREL, CODPAP, SEQ, ATENDENTE, CODCONTATO, DATAHORACADASTRO, DATAHORAAGENDAMENTO, SITUACAO, COMENTARIO, CODUSUEXEC, TIPCHAM, AD_FALLOWUP)
                VALUES (:NEW.NUREL, :NEW.AD_CODPAP, (SELECT MAX(SEQ)+1 FROM AD_AGENDAPAP WHERE CODPAP = :NEW.AD_CODPAP), :NEW.CODUSU, :NEW.AD_CODCONTATO, :NEW.DHCHAMADA, :NEW.DHPROXCHAM, :NEW.PENDENTE, :NEW.COMENTARIOS, :NEW.CODATENDENTE, :NEW.TIPCHAM, :NEW.AD_FALLOWUP);
                COMMIT;
                --SE NÃO EXISTIR NENHUM REGISTRO NA AGENDA, É INSERIDO NA AGENDA DO PROSPECT.
            ELSE
                Insert into AD_AGENDAPAP (CODNUREL, CODPAP, SEQ, ATENDENTE, CODCONTATO, DATAHORACADASTRO, DATAHORAAGENDAMENTO, SITUACAO, COMENTARIO, CODUSUEXEC, TIPCHAM, AD_FALLOWUP)
                VALUES (:NEW.NUREL, :NEW.AD_CODPAP, 1, :NEW.CODUSU, :NEW.AD_CODCONTATO, :NEW.DHCHAMADA, :NEW.DHPROXCHAM, :NEW.PENDENTE, :NEW.COMENTARIOS, :NEW.CODATENDENTE, :NEW.TIPCHAM, :NEW.AD_FALLOWUP);
                COMMIT;
            END IF;
        END IF;
        
        --POE O PARCEIRO NA CARTEIRA DO VENDEDOR QUE GEROU REGISTRO NO TELEMARKETING POR PELO TEMPO DETERMINADO NO PARAMENTRO "TEMPPARTELVENTT" (EM DIAS).
        IF :NEW.CODPARC IS NOT NULL OR :NEW.CODPARC <> 1 THEN
        
                --DESATIVA TRIGGER DO PARCEIRO PARA UPDATE
                EXECUTE IMMEDIATE 'ALTER TRIGGER TRG_UPD_TGFPAR_TOTAL DISABLE';
            
            --VERIFICA SE TEM CONTRATO
            SELECT COUNT(CON.CODPARC) 
            INTO PTEMCONTRATO
            FROM TCSCON CON 
            WHERE CON.CODPARC = :NEW.CODPARC 
              AND CON.ATIVO = 'S';
        
            --VERIFICA SE O GRUPO DO USUÁRIO QUE CADASTROU O REGISTRO É VENDEDOR.
            SELECT NVL(USU.CODGRUPO,0) 
            INTO PCODGRUPO
            FROM TSIUSU USU 
            WHERE USU.CODUSU = :NEW.CODUSU;
            
            IF ((PCODGRUPO = PCODGRUPOVENDA) OR (PCODGRUPO = 1)) AND PTEMCONTRATO = 0 THEN
            
                --VERIFICA SE PARCEIRO TEM VENDEDOR PREFERENCIAL
                SELECT PAR.CODVEND
                INTO PCODVEND
                FROM TGFPAR PAR
                WHERE PAR.CODPARC = :NEW.CODPARC;
                
                --OBTEM VENDEDOR
                SELECT MAX(USU.CODVEND)
                INTO PCODVENDPRE
                FROM TSIUSU USU
                WHERE USU.CODUSU = :NEW.CODUSU;
               
                --SE VENDEDOR PREFERENCIA FOR = 0
                IF PCODVEND = 0 THEN
                            
                    SELECT MAX(PAI.ID)
                    INTO PKPAI  
                    FROM AD_PARCEIROSINATIVOS PAI
                    WHERE TRUNC(PAI.DTGRAVACAO) = TRUNC(SYSDATE);
               
                    IF PKPAI = 0 THEN
                    RAISE_APPLICATION_ERROR(-20101, 'PKPAI: ' || TO_CHAR(PKPAI) ||'. PCODVENDPRE: ' || TO_CHAR(PCODVENDPRE) ||'');
                        SELECT NVL(MAX(ID) + 1,1)
                        INTO PKPAI  
                        FROM AD_PARCEIROSINATIVOS;

                        INSERT INTO AD_PARCEIROSINATIVOS (ID, DTGRAVACAO) VALUES
                                                     (PKPAI, SYSDATE);
                        
                        SELECT NVL(MAX(IDPAR) + 1,1)
                        INTO PKFILHO  
                        FROM AD_CLIENTESATIVOSCARTPAR
                        WHERE ID = PKPAI;
                        
                        INSERT INTO AD_CLIENTESATIVOSCARTPAR (ID, IDPAR, CODPARC, CODVEND, DATA, TIPO, DTALTER) VALUES
                                                         (PKPAI, PKFILHO, :NEW.CODPARC, PCODVENDPRE, SYSDATE, 't', SYSDATE); 
                            
                        --UPDATE NO PARCEIRO
                        UPDATE TGFPAR SET CODVEND = PCODVENDPRE WHERE CODPARC = :NEW.CODPARC;
                    ELSE
                    
                    RAISE_APPLICATION_ERROR(-20101, 'PKPAI: ' || TO_CHAR(PKPAI) ||'. PCODVENDPRE: ' || TO_CHAR(PCODVENDPRE) ||'');
                    
                        SELECT NVL(MAX(IDPAR) + 1,1)
                        INTO PKFILHO  
                        FROM AD_CLIENTESATIVOSCARTPAR
                        WHERE ID = PKPAI;
                        
                        INSERT INTO AD_CLIENTESATIVOSCARTPAR (ID, IDPAR, CODPARC, CODVEND, DATA, TIPO, DTALTER) VALUES
                                                         (PKPAI, PKFILHO, :NEW.CODPARC, PCODVENDPRE, SYSDATE, 't', SYSDATE); 
                            
                        --UPDATE NO PARCEIRO
                        UPDATE TGFPAR SET CODVEND = PCODVENDPRE WHERE CODPARC = :NEW.CODPARC;
                    END IF;
                END IF;
            END IF;
            
        --REATIVA TRIGGER DO PARCEIRO
        EXECUTE IMMEDIATE 'ALTER TRIGGER TRG_UPD_TGFPAR_TOTAL ENABLE';
        
        END IF;
    END IF;

            
    IF UPDATING THEN
    --NA ATUALIZAÇÃO TBM ATUALIZO O STATUS DO PROSPECT PARA O PRÓXIMO PASSO
        IF :NEW.AD_CODPAP IS NOT NULL THEN
            --SE FOR FALLOW-UP 1 E STATUS ESTIVER RESOLVIDO, MUDO A ATIVIDADE PARA FALLOW UP 2 E FLUXO DE PROSPECÇÃO
            IF (:NEW.AD_FALLOWUP = 'F1') AND (:NEW.PENDENTE = 'N') AND (:OLD.PENDENTE <> :NEW.PENDENTE) THEN
                UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 4, AD_FLUXOLEAD = 2 WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
            ELSIF (:NEW.AD_FALLOWUP = 'F2') AND (:NEW.PENDENTE = 'N') AND (:OLD.PENDENTE <> :NEW.PENDENTE) THEN
                UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 6, AD_FLUXOLEAD = 2  WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
            ELSIF (:NEW.AD_FALLOWUP = 'F3') AND (:NEW.PENDENTE = 'N') AND (:OLD.PENDENTE <> :NEW.PENDENTE) THEN
                UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 7, AD_FLUXOLEAD = 2  WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
            ELSIF (:NEW.AD_FALLOWUP = 'SP') AND (:NEW.PENDENTE = 'N') AND (:OLD.PENDENTE <> :NEW.PENDENTE) THEN
                UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 7, AD_FLUXOLEAD = 3 WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
            END IF;
        END IF;
        --ATUALIZO TBM A AGENDA DO PROSPECT.
        IF :NEW.AD_CODPAP is not null then   
            UPDATE AD_AGENDAPAP SET CODPAP =:NEW.AD_CODPAP
                                  , SITUACAO = :NEW.PENDENTE
                                  , CODCONTATO = :NEW.AD_CODCONTATO
                                  , ATENDENTE = :NEW.CODUSU
                                  , DATAHORAAGENDAMENTO = :NEW.DHPROXCHAM
                                  , CODUSUEXEC = :NEW.CODATENDENTE
                                  , COMENTARIO = :NEW.COMENTARIOS
                                  , TIPCHAM = :NEW.TIPCHAM
                                  , AD_FALLOWUP = :NEW.AD_FALLOWUP
            WHERE  CODNUREL = :NEW.NUREL;
            COMMIT;     
        end if;
    END IF;
    --ATIVO NOVAMENTE A TRIGGER DA AGENDA PROSPECT.
    EXECUTE IMMEDIATE 'ALTER TRIGGER TRG_INC_AD_AGENDAPAP_M_TOTAL ENABLE'; 
END;
/
