DROP TRIGGER TOTALPRD.TRG_INC_TGFTEL_M_TOTAL;

CREATE OR REPLACE TRIGGER TOTALPRD.TRG_INC_TGFTEL_M_TOTAL
BEFORE INSERT OR UPDATE ON TOTALPRD.TGFTEL
FOR EACH ROW
DECLARE
    VSEQUENCIA INT;
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
/*
DESCRIÇÃO: O campo COMENTARIOS foi modificado o tamanho, de 200 para 1000, para não perder os comentários nas atualizações do sistema 
será feito backup para o campo ad_coment_backup dota ves que for inserido.
AUTOR: Mauricio Rodrigues
ATUALIZAÇÃO: Mauricio Rodrigues
Data da criação: 27/10/2017
ATUALIZAÇÃO: Mauricio Rodrigues
Data: 18/04/2018
ALTERAÇÕES: Atualização nos comentários.
            Atualizado o campo AD_FALLOWUP
            Atualizado o insert e update das agendas, para o fluxo de prospecção do prospect.
*/

    --if 1.Bakup do comentário
    --2. atualiza data de contato do prospect    
    IF INSERTING OR UPDATING THEN
        :NEW.AD_COMENT_BACKUP := :NEW.COMENTARIOS;
    END IF;
    --STOP NA TRIGGER ABAIXO PARA NÃO ENTRAR EM LOOP
    EXECUTE IMMEDIATE 'ALTER TRIGGER TRG_INC_AD_AGENDAPAP_M_TOTAL DISABLE';
    
    --INSERE NA TABELA DETALHE DO PROSPECT.
    IF INSERTING THEN
        SELECT COUNT(1)
        INTO VSEQUENCIA
        FROM AD_AGENDAPAP
        WHERE CODPAP = :NEW.AD_CODPAP;
        --AQUI PRECISO VERIFICAR SE EXISTE UM PROSPECT (AD_CODPAP) POIS A TELA TAMBÉM É UTILIZADA POR OUTROS SETORES QUE USAM PARCEIROS (CODPARC)
        if :NEW.AD_CODPAP is not null then
                    --VERIFICO O STATOS DO CAMPO AD_FALLOWUP E ATUALIZO O PROSPECT PARA O STATUS DE PROSPECÇÃO.
                    IF (:NEW.AD_FALLOWUP = 'F1') AND (:NEW.AD_REGMKTDIGITAL IS NULL) THEN
                        UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 2, AD_FLUXOLEAD = 2 WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
                    ELSIF (:NEW.AD_FALLOWUP = 'F2') AND (:NEW.AD_REGMKTDIGITAL IS NULL)  THEN
                        UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 4, AD_FLUXOLEAD = 2  WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
                    ELSIF (:NEW.AD_FALLOWUP = 'F3') AND (:NEW.AD_REGMKTDIGITAL IS NULL) THEN
                        UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 6, AD_FLUXOLEAD = 2  WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
                    ELSIF (:NEW.AD_FALLOWUP = 'SP') AND (:NEW.AD_REGMKTDIGITAL IS NULL)  THEN
                        UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 8, AD_FLUXOLEAD = 3 WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
                    END IF;
               --SE JÁ EXISTI REGISTRO NA AGENDA, É INSERIDO NA AGENDA DO PROSPECT.
               IF VSEQUENCIA <> 0 THEN
                Insert into AD_AGENDAPAP (CODNUREL, CODPAP, SEQ, ATENDENTE, CODCONTATO, DATAHORACADASTRO, DATAHORAAGENDAMENTO, SITUACAO, COMENTARIO, CODUSUEXEC, TIPCHAM, AD_FALLOWUP)
                VALUES (:NEW.NUREL, :NEW.AD_CODPAP, (SELECT MAX(SEQ)+1 FROM AD_AGENDAPAP WHERE CODPAP = :NEW.AD_CODPAP), :NEW.CODUSU, :NEW.AD_CODCONTATO, :NEW.DHCHAMADA, :NEW.DHPROXCHAM, :NEW.PENDENTE, :NEW.COMENTARIOS, :NEW.CODATENDENTE, :NEW.TIPCHAM, :NEW.AD_FALLOWUP);
                COMMIT;
                --SE NÃO EXISTIR NENHUM REGISTRO NA AGENDA, É INSERIDO NA AGENDA DO PROSPECT.
            ELSE
                Insert into AD_AGENDAPAP (CODNUREL, CODPAP, SEQ, ATENDENTE, CODCONTATO, DATAHORACADASTRO, DATAHORAAGENDAMENTO, SITUACAO, COMENTARIO, CODUSUEXEC, TIPCHAM, AD_FALLOWUP)
                VALUES (:NEW.NUREL, :NEW.AD_CODPAP, 1, :NEW.CODUSU, :NEW.AD_CODCONTATO, :NEW.DHCHAMADA, :NEW.DHPROXCHAM, :NEW.PENDENTE, :NEW.COMENTARIOS, :NEW.CODATENDENTE, :NEW.TIPCHAM, :NEW.AD_FALLOWUP);
                COMMIT;
            END IF;
        end if;
    END IF;

            
    IF UPDATING THEN
    --NA ATUALIZAÇÃO TBM ATUALIZO O STATUS DO PROSPECT PARA O PRÓXIMO PASSO
        IF :NEW.AD_CODPAP IS NOT NULL THEN
            --SE FOR FALLOW-UP 1 E STATUS ESTIVER RESOLVIDO, MUDO A ATIVIDADE PARA FALLOW UP 2 E FLUXO DE PROSPECÇÃO
            IF (:NEW.AD_FALLOWUP = 'F1') AND (:NEW.PENDENTE = 'N') AND (:OLD.PENDENTE <> :NEW.PENDENTE) THEN
                UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 4, AD_FLUXOLEAD = 2 WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
            ELSIF (:NEW.AD_FALLOWUP = 'F2') AND (:NEW.PENDENTE = 'N') AND (:OLD.PENDENTE <> :NEW.PENDENTE) THEN
                UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 6, AD_FLUXOLEAD = 2  WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
            ELSIF (:NEW.AD_FALLOWUP = 'F3') AND (:NEW.PENDENTE = 'N') AND (:OLD.PENDENTE <> :NEW.PENDENTE) THEN
                UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 7, AD_FLUXOLEAD = 2  WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
            ELSIF (:NEW.AD_FALLOWUP = 'SP') AND (:NEW.PENDENTE = 'N') AND (:OLD.PENDENTE <> :NEW.PENDENTE) THEN
                UPDATE TCSPAP PAP SET PAP.AD_ATIVIDADESFLUXO = 7, AD_FLUXOLEAD = 3 WHERE PAP.CODPAP = :NEW.AD_CODPAP; COMMIT;
            END IF;
        END IF;
        --ATUALIZO TBM A AGENDA DO PROSPECT.
        IF :NEW.AD_CODPAP is not null then   
            UPDATE AD_AGENDAPAP SET CODPAP =:NEW.AD_CODPAP
                                  , SITUACAO = :NEW.PENDENTE
                                  , CODCONTATO = :NEW.AD_CODCONTATO
                                  , ATENDENTE = :NEW.CODUSU
                                  , DATAHORAAGENDAMENTO = :NEW.DHPROXCHAM
                                  , CODUSUEXEC = :NEW.CODATENDENTE
                                  , COMENTARIO = :NEW.COMENTARIOS
                                  , TIPCHAM = :NEW.TIPCHAM
                                  , AD_FALLOWUP = :NEW.AD_FALLOWUP
            WHERE  CODNUREL = :NEW.NUREL;
            COMMIT;     
        end if;
    END IF;
    --ATIVO NOVAMENTE A TRIGGER DA AGENDA PROSPECT.
    EXECUTE IMMEDIATE 'ALTER TRIGGER TRG_INC_AD_AGENDAPAP_M_TOTAL ENABLE'; 
END;
/
